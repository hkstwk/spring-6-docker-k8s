# docker run --name spring-6-mysql -d -e MYSQL_USER=restadmin -e MYSQL_PASSWORD=password -e MYSQL_DATABASE=restdb -e MYSQL_ROOT_PASSWORD=password mysql:latest
services:
  mysql:
    container_name: mysql
    image: mysql:latest
    environment:
      MYSQL_USER: restadmin
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: restdb
      MYSQL_ROOT_PASSWORD: password
    expose:
      - 3306

# docker run --name mongo -d -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_ROOT_PASSWORD=example -p 27017:27017 mongo
  mongo:
    container_name: mongo
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    expose:
      - 27017

# docker run --name reactive-mongo -d -p 8084:8080 -e SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://auth-server:9000 \
# -e SERVER_PORT=8080 -e SFG_MONGOHOST=mongo --link auth-server:auth-server --link mongo:mongo reactive-mongo:0.0.1-SNAPSHOT
  reactive-mongo:
    container_name: reactive-mongo
    image: reactive-mongo:0.0.1-SNAPSHOT
    depends_on:
      - mongo
    environment:
      SERVER_PORT: 8080
      SFG_MONGOHOST: mongo
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://auth-server:9000
    expose:
      - 8080

# docker run --name auth-server -d -p 9000:9000 spring-6-auth-server:0.0.1-SNAPSHOT
  auth-server:
    container_name: auth-server
    image: spring-6-auth-server:0.0.1-SNAPSHOT
    expose:
      - 9000

#  docker run --name rest-mvc -d -p 8082:8080 -e SPRING_PROFILES_ACTIVE=localmysql \
#  -e SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://auth-server:9000 -e SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/restdb \
#  -e SERVER_PORT=8080 --link auth-server:auth-server --link mysql:mysql spring-6-rest-mvc:0.0.1-SNAPSHOT
  rest-mvc:
    container_name: rest-mvc
    image: spring-6-rest-mvc:0.0.1-SNAPSHOT
#    expose:
#      - 8080
    environment:
      SPRING_PROFILES_ACTIVE: localmysql
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/restdb
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://auth-server:9000
      SERVER_PORT: 8080
    depends_on:
      - mysql

#  docker run --name reactive -d -p 8083:8080 -e SERVER_PORT=8080 -e SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://auth-server:9000 \
#  --link auth-server:auth-server spring-6-reactive:0.0.1-SNAPSHOT
  reactive:
    container_name: reactive
    image: spring-6-reactive:0.0.1-SNAPSHOT
    environment:
      SERVER_PORT: 8080
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://auth-server:9000
    expose:
      - 8080

#  docker run --name gateway -d -p 8080:8080 -e SPRING_PROFILES_ACTIVE=docker --link auth-server:auth-server \
#  --link rest-mvc:rest-mvc --link reactive-mongo:reactive-mongo spring-6-gateway:0.0.1-SNAPSHOT
  gateway:
    container_name: gateway
    image: spring-6-gateway:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    expose:
      - 8080
    ports:
      - 8080:8080
    depends_on:
      - rest-mvc
      - reactive
      - reactive-mongo
      - auth-server


